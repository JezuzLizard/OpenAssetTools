// Game: Black Ops 2 (T6)
game T6;

// Game Assets
asset PhysPreset ASSET_TYPE_PHYSPRESET;
asset PhysConstraints ASSET_TYPE_PHYSCONSTRAINTS;
asset DestructibleDef ASSET_TYPE_DESTRUCTIBLEDEF;
asset XAnimParts ASSET_TYPE_XANIMPARTS;
asset XModel ASSET_TYPE_XMODEL;
asset Material ASSET_TYPE_MATERIAL;
asset MaterialTechniqueSet ASSET_TYPE_TECHNIQUE_SET;
asset GfxImage ASSET_TYPE_IMAGE;
asset SndBank ASSET_TYPE_SOUND;
asset SndPatch ASSET_TYPE_SOUND_PATCH;
asset clipMap_t ASSET_TYPE_CLIPMAP_PVS;
asset ComWorld ASSET_TYPE_COMWORLD;
asset GameWorldSp ASSET_TYPE_GAMEWORLD_SP;
asset GameWorldMp ASSET_TYPE_GAMEWORLD_MP;
asset MapEnts ASSET_TYPE_MAP_ENTS;
asset GfxWorld ASSET_TYPE_GFXWORLD;
asset GfxLightDef ASSET_TYPE_LIGHT_DEF;
asset Font_s ASSET_TYPE_FONT;
asset FontIcon ASSET_TYPE_FONTICON;
asset MenuList ASSET_TYPE_MENULIST;
asset menuDef_t ASSET_TYPE_MENU;
asset LocalizeEntry ASSET_TYPE_LOCALIZE_ENTRY;
asset WeaponVariantDef ASSET_TYPE_WEAPON;
asset WeaponAttachment ASSET_TYPE_ATTACHMENT;
asset WeaponAttachmentUnique ASSET_TYPE_ATTACHMENT_UNIQUE;
asset WeaponCamo ASSET_TYPE_WEAPON_CAMO;
asset SndDriverGlobals ASSET_TYPE_SNDDRIVER_GLOBALS;
asset FxEffectDef ASSET_TYPE_FX;
asset FxImpactTable ASSET_TYPE_IMPACT_FX;
asset RawFile ASSET_TYPE_RAWFILE;
asset StringTable ASSET_TYPE_STRINGTABLE;
asset LeaderboardDef ASSET_TYPE_LEADERBOARD;
asset XGlobals ASSET_TYPE_XGLOBALS;
asset ddlRoot_t ASSET_TYPE_DDL;
asset Glasses ASSET_TYPE_GLASSES;
asset EmblemSet ASSET_TYPE_EMBLEMSET;
asset ScriptParseTree ASSET_TYPE_SCRIPTPARSETREE;
asset KeyValuePairs ASSET_TYPE_KEYVALUEPAIRS;
asset VehicleDef ASSET_TYPE_VEHICLEDEF;
asset MemoryBlock ASSET_TYPE_MEMORYBLOCK;
asset AddonMapEnts ASSET_TYPE_ADDON_MAP_ENTS;
asset TracerDef ASSET_TYPE_TRACER;
asset SkinnedVertsDef ASSET_TYPE_SKINNEDVERTS;
asset Qdb ASSET_TYPE_QDB;
asset Slug ASSET_TYPE_SLUG;
asset FootstepTableDef ASSET_TYPE_FOOTSTEP_TABLE;
asset FootstepFXTableDef ASSET_TYPE_FOOTSTEPFX_TABLE;
asset ZBarrierDef ASSET_TYPE_ZBARRIER;

// Setup blocks
block temp    XFILE_BLOCK_TEMP              default;
block runtime XFILE_BLOCK_RUNTIME_VIRTUAL   default;
block runtime XFILE_BLOCK_RUNTIME_PHYSICAL;
block delay   XFILE_BLOCK_DELAY_VIRTUAL	    default;
block delay   XFILE_BLOCK_DELAY_PHYSICAL;
block normal  XFILE_BLOCK_VIRTUAL           default;
block normal  XFILE_BLOCK_PHYSICAL;

// =========================================
// XModelPieces
// =========================================
use XModelPieces;
set string name;
set count pieces numpieces;

// =========================================
// PhysPreset
// =========================================
set string PhysPreset::name;

// =========================================
// PhysConstraints
// =========================================
set string PhysConstraints::name;

use PhysConstraint;
set scriptstring targetname;
set scriptstring target_ent1;
set scriptstring target_ent2;

// =========================================
// DestructibleDef
// =========================================
use DestructibleDef;
set string name;
set count pieces numPieces;

// DestructiblePiece
set scriptstring DestructiblePiece::enableLabel;

// DestructibleStage
set scriptstring DestructibleStage::showBone;

// =========================================
// XAnimParts
// =========================================
use XAnimParts;
set string name;
set scriptstring names;
set count names boneCount[9];
set count notify notifyCount;
set count deltaPart 1;
set count dataByte dataByteCount;
set count dataShort dataShortCount;
set count dataInt dataIntCount;
set count randomDataShort randomDataShortCount;
set count randomDataByte randomDataByteCount;
set count randomDataInt randomDataIntCount;
set count indices::_1 indexCount;
set count indices::_2 indexCount;
set condition indices::_1 numframes < 256;
set condition indices::data never;
reorder:
    names
    notify
    deltaPart
    dataByte
    dataShort
    dataInt
    randomDataShort
    randomDataByte
    randomDataInt
    indices;

// XAnimNotifyInfo
set scriptstring XAnimNotifyInfo::name;

// XAnimDeltaPart
use XAnimDeltaPart;
set count trans 1;
set count quat2 1;
set count quat 1;

// XAnimPartTrans
use XAnimPartTrans;
set condition u::frames size > 0;
set condition u::frames::indices::_1 XAnimParts::numframes < 256;
set arraysize u::frames::indices::_1 size + 1;
set arraysize u::frames::indices::_2 size + 1;
set condition u::frames::frames::_1 smallTrans;
set count u::frames::frames::_1 size + 1;
set count u::frames::frames::_2 size + 1;

// XAnimPartTransFrames
reorder XAnimPartTransFrames:
    indices
    frames;

// XAnimDeltaPartQuat2
use XAnimDeltaPartQuat2;
set condition u::frames size > 0;
set condition u::frames::indices::_1 XAnimParts::numframes < 256;
set arraysize u::frames::indices::_1 size + 1;
set arraysize u::frames::indices::_2 size + 1;
set count u::frames::frames size + 1;

// XAnimDeltaPartQuatDataFrames2
reorder XAnimDeltaPartQuatDataFrames2:
    indices
    frames;

// XAnimDeltaPartQuat
use XAnimDeltaPartQuat;
set condition u::frames size > 0;
set condition u::frames::indices::_1 XAnimParts::numframes < 256;
set arraysize u::frames::indices::_1 size + 1;
set arraysize u::frames::indices::_2 size + 1;
set count u::frames::frames size + 1;

// =========================================
// XModel
// =========================================
use XModel;
set string name;
set scriptstring boneNames;
set reusable boneNames;
set count boneNames numBones;
set reusable parentList;
set count parentList numBones - numRootBones;
set reusable quats;
set count quats numBones - numRootBones;
set reusable trans;
set count trans numBones - numRootBones;
set reusable partClassification;
set count partClassification numBones;
set reusable baseMat;
set count baseMat numBones;
set count surfs numsurfs;
set count materialHandles numsurfs;
set count collSurfs numCollSurfs;
set count boneInfo numBones;
set count himipInvSqRadii numsurfs;
set count collmaps numCollmaps;

// XSurface
use XSurface;
set condition verts0 !(flags & 1);
set reusable verts0;
set count verts0 vertCount;
set count vb0 0;
set reusable vertList;
set count vertList vertListCount;
set reusable triIndices;
set count triIndices triCount;
set count indexBuffer 0;
reorder:
	vertInfo
	verts0
	vertList
	triIndices;

// XSurfaceVertexInfo
use XSurfaceVertexInfo;
set reusable vertsBlend;
set count vertsBlend vertCount[0] 
						+ 3 * vertCount[1] 
						+ 5 * vertCount[2]
						+ 7 * vertCount[3];
set reusable tensionData;
set count tensionData vertCount[0] 
						+ 3 * vertCount[1] 
						+ 5 * vertCount[2]
						+ 7 * vertCount[3];

// XRigidVertList
set count XRigidVertList::collisionTree 1;

// XSurfaceCollisionTree
use XSurfaceCollisionTree;
set count nodes nodeCount;
set count leafs leafCount;

// XModelCollSurf_s
set count XModelCollSurf_s::collTris numCollTris;

// Collmap
set count Collmap::geomList 1;

// PhysGeomList
set count PhysGeomList::geoms count;

// PhysGeomInfo
use PhysGeomInfo;
set reusable brush;
set count brush 1;

// BrushWrapper
use BrushWrapper;
set count sides numsides;
set reusable verts;
set count verts numverts;
set reusable planes;
set count planes numsides;

// cbrushside_t
use cbrushside_t;
set reusable plane;
set count plane 1;

// =========================================
// Material
// =========================================
use Material;
set string info::name;
set reusable textureTable;
set count textureTable textureCount;
set reusable constantTable;
set count constantTable constantCount;
set reusable stateBitsTable;
set count stateBitsTable stateBitsCount;

// GfxStateBits
use GfxStateBits;
set count blendState 0;
set count depthStencilState 0;
set count rasterizerState 0;

// =========================================
// MaterialTechniqueSet
// =========================================
use MaterialTechniqueSet;
set string name;
set reusable techniques;

// MaterialTechnique
use MaterialTechnique;
set string name;
set arraysize passArray passCount;
reorder:
    passArray
    name;

// MaterialPass
use MaterialPass;
set count args perPrimArgCount + perObjArgCount + stableArgCount;
set reusable vertexShader;
set reusable vertexDecl;
set reusable pixelShader;
reorder:
    vertexShader
    vertexDecl
    pixelShader
    args;

// MaterialVertexStreamRouting
set count MaterialVertexStreamRouting::decl 0;

// MaterialVertexShader
set string MaterialVertexShader::name;

// MaterialVertexShaderProgram
set count MaterialVertexShaderProgram::vs 0;

// GfxVertexShaderLoadDef
set count GfxVertexShaderLoadDef::program programSize;

// MaterialPixelShader;
set string MaterialPixelShader::name;

// MaterialPixelShaderProgram
set count MaterialPixelShaderProgram::ps 0;

// GfxPixelShaderLoadDef
set count GfxPixelShaderLoadDef::program programSize;

// MaterialShaderArgument
use MaterialShaderArgument;
//set condition u::literalConst type == MTL_ARG_LITERAL_VERTEX_CONST || type == MTL_ARG_LITERAL_PIXEL_CONST;
set condition u::literalConst type == 1 || type == 7;
set reusable u::literalConst;
set count u::literalConst 1;

// =========================================
// GfxImage
// =========================================
use GfxImage;
set string name;
reorder:
    name
    texture;

// GfxTexture
use GfxTexture;
set reusable loadDef;
set condition loadDef always;

// GfxImageLoadDef
set arraysize GfxImageLoadDef::data resourceSize;

// =========================================
// SndBank
// =========================================
use SndBank;
set string name;
set count alias aliasCount;
set count aliasIndex aliasCount;
set count radverbs radverbCount;
set count ducks duckCount;
set count scriptIdLookups scriptIdLookupCount;

// SndAliasList
use SndAliasList;
set string name;
set reusable head;
set count head count;

// SndAlias
use SndAlias;
set string name;
set string subtitle;
set string secondaryname;
set string assetFileName;

// SndRuntimeAssetBank
use SndRuntimeAssetBank;
set string zone;
set string language;

// SndLoadedAssets
use SndLoadedAssets;
set string zone;
set string language;
set count entries entryCount;
set count data dataSize;

// =========================================
// SndPatch
// =========================================

// =========================================
// clipMap_t
// =========================================

// =========================================
// ComWorld
// =========================================

// =========================================
// GameWorldSp
// =========================================

// =========================================
// GameWorldMp
// =========================================

// =========================================
// MapEnts
// =========================================

// =========================================
// GfxWorld
// =========================================

// =========================================
// GfxLightDef
// =========================================

// =========================================
// Font_s
// =========================================

// =========================================
// FontIcon
// =========================================

// =========================================
// MenuList
// =========================================

// =========================================
// menuDef_t
// =========================================

// =========================================
// LocalizeEntry
// =========================================
use LocalizeEntry;
set string value;
set string name;

// =========================================
// WeaponVariantDef
// =========================================

// =========================================
// WeaponAttachment
// =========================================

// =========================================
// WeaponAttachmentUnique
// =========================================

// =========================================
// WeaponCamo
// =========================================

// =========================================
// SndDriverGlobals
// =========================================

// =========================================
// FxEffectDef
// =========================================
use FxElemVisuals;
set condition anonymous never;

// =========================================
// FxImpactTable
// =========================================

// =========================================
// RawFile
// =========================================
use RawFile;
set string name;
set count buffer len + 1;

// =========================================
// StringTable
// =========================================
use StringTable;
set string name;
set count values columnCount * rowCount;
set count cellIndex columnCount * rowCount;

// StringTableCell
set string StringTableCell::string;

// =========================================
// LeaderboardDef
// =========================================

// =========================================
// XGlobals
// =========================================

// =========================================
// ddlRoot_t
// =========================================
use ddlRoot_t;
set string name;
set count ddlDef 1;

// ddlDef_t
use ddlDef_t;
set count structList structCount;
set count enumList enumCount;
set count next 1;

// ddlStructDef_t
use ddlStructDef_t;
set string name;
set count members memberCount;
set count hashTable memberCount;

// ddlMemberDef_t
set string ddlMemberDef_t::name;

// ddlEnumDef_t
use ddlEnumDef_t;
set string name;
set string members;
set count members memberCount;
set count hashTable memberCount;

// =========================================
// EmblemSet
// =========================================

// =========================================
// ScriptParseTree
// =========================================
use ScriptParseTree;
set string name;
set count buffer len + 1;

// =========================================
// KeyValuePairs
// =========================================
use KeyValuePairs;
set string name;
set count keyValuePairs numVariables;

// KeyValuePair
set string KeyValuePair::value;

// =========================================
// VehicleDef
// =========================================
use VehicleDef;
set string name;
set string turretWeapon;
set string gunnerWeapon;
set string sndNames;
set string sndMaterialNames;
set string futzName;
set string animSet;
set string deathFxSound;
set string shootShock;
set string shootRumble;
set string rumbleType;
set string compassIcon;
set string gasButtonName;
set string reverseBrakeButtonName;
set string handBrakeButtonName;
set string attackButtonName;
set string attackSecondaryButtonName;
set string boostButtonName;
set string moveUpButtonName;
set string moveDownButtonName;
set string switchSeatButtonName;
set string steerGraphName;
set string accelGraphName;

// =========================================
// MemoryBlock
// =========================================

// =========================================
// AddonMapEnts
// =========================================

// =========================================
// TracerDef
// =========================================

// =========================================
// SkinnedVertsDef
// =========================================
set string SkinnedVertsDef::name;

// =========================================
// Qdb
// =========================================
use Qdb;
set string name;
set count buffer len + 1;

// =========================================
// Slug
// =========================================
use Slug;
set string name;
set count buffer len + 1;

// =========================================
// FootstepTableDef
// =========================================

// =========================================
// FootstepFXTableDef
// =========================================

// =========================================
// ZBarrierDef
// =========================================

// EOF