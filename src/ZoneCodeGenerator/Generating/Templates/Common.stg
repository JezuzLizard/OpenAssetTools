delimiters "$", "$"

Capital(name) ::= "$name; format=\"cap\"$"
Lower(name) ::= "$name; format=\"lower\"$"

TypeDeclaration(typeDecl) ::= "$if(typeDecl.IsConst)$const $endif$$typeDecl.Type.FullName$"

TypeVarName(type) ::= "var$SafeTypeName(type)$"
TypePtrVarName(type) ::= "var$SafeTypeName(type)$Ptr"

SafeTypeName(type) ::= "$type; format=\"safe_name\"$"

PrintFollowingReferences(references) ::= <%
$references:{ reference | 

$if(reference.ArraySize)$
[$reference.ArraySize$]
$else$
*
$endif$

}$
%>

PrintArrayIndices(reference) ::= "$reference.ArrayIndices:{ index | [$index$]}$"

PrintOperandStatic(op) ::= <%
$if(op.EnumMemberValue)$
$op.EnumMemberValue.Name$
$else$
$op.Value$
$endif$
%>

PrintOperandDynamic(op) ::= <%
$TypeVarName(op.Structure.Type)$
->$trunc(op.ReferencedMemberChain):{member | $member.Member.Name$$if(member.Computations.ContainsNonEmbeddedReference)$->$else$.$endif$}$
$last(op.ReferencedMemberChain):{member | $member.Member.Name$}$
$op.ArrayIndices:{ arrayIndex | [$PrintEvaluation(arrayIndex)$]}$
%>

PrintOperation(operation) ::= <%
$if(operation.Operand1NeedsParenthesis)$
($PrintEvaluation(operation.Operand1)$) 
$else$
$PrintEvaluation(operation.Operand1)$ 
$endif$

$operation.OperationType.Syntax$ 

$if(operation.Operand2NeedsParenthesis)$
($PrintEvaluation(operation.Operand2)$)
$else$
$PrintEvaluation(operation.Operand2)$
$endif$

%>

PrintEvaluation(eval) ::= <%
$if(eval.OperationType)$
$PrintOperation(eval)$
$elseif(eval.IsStatic)$
$PrintOperandStatic(eval)$
$else$
$PrintOperandDynamic(eval)$
$endif$
%>